{"ast":null,"code":"import _slicedToArray from \"/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/src/components/UserProtectedRoute/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nvar UserProtectedRoute = function UserProtectedRoute(props) {\n  var role = Cookies.get(\"role\");\n  var navigate = useNavigate();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1]; // checking acess token\n  var checkAccessToken = function checkAccessToken() {\n    var userToken = Cookies.get(\"jwtToken\");\n    if (userToken === undefined) {\n      setIsLoggedIn(false);\n      return navigate(\"/login\", {\n        replace: true\n      });\n    }\n    if (isLoggedIn && role !== \"user\") {\n      return navigate(\"/\", {\n        replace: true\n      });\n    }\n    setIsLoggedIn(true);\n  };\n  useEffect(function () {\n    checkAccessToken();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, isLoggedIn ? props.children : null);\n};\nexport default UserProtectedRoute;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Cookies","UserProtectedRoute","props","role","get","navigate","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","checkAccessToken","userToken","undefined","replace","createElement","Fragment","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/src/components/UserProtectedRoute/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst UserProtectedRoute = (props) => {\n  const role = Cookies.get(\"role\");\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // checking acess token\n  const checkAccessToken = () => {\n    const userToken = Cookies.get(\"jwtToken\");\n    if (userToken === undefined) {\n      setIsLoggedIn(false);\n      return navigate(\"/login\",{replace:true});\n    }\n    if (isLoggedIn && role !== \"user\") {\n      return navigate(\"/\",{replace:true});\n    }\n    setIsLoggedIn(true);\n  };\n  useEffect(() => {\n    checkAccessToken();\n  }, [isLoggedIn]);\n  return <React.Fragment>{isLoggedIn ? props.children : null}</React.Fragment>;\n};\nexport default UserProtectedRoute;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAE/B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAK;EACpC,IAAMC,IAAI,GAAGH,OAAO,CAACI,GAAG,CAAC,MAAM,CAAC;EAChC,IAAMC,QAAQ,GAAGN,WAAW,EAAE;EAAC,IAAAO,SAAA,GACKR,QAAQ,CAAC,KAAK,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA,KAChC;EACA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAMC,SAAS,GAAGZ,OAAO,CAACI,GAAG,CAAC,UAAU,CAAC;IACzC,IAAIQ,SAAS,KAAKC,SAAS,EAAE;MAC3BH,aAAa,CAAC,KAAK,CAAC;MACpB,OAAOL,QAAQ,CAAC,QAAQ,EAAC;QAACS,OAAO,EAAC;MAAI,CAAC,CAAC;IAC1C;IACA,IAAIL,UAAU,IAAIN,IAAI,KAAK,MAAM,EAAE;MACjC,OAAOE,QAAQ,CAAC,GAAG,EAAC;QAACS,OAAO,EAAC;MAAI,CAAC,CAAC;IACrC;IACAJ,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EACDb,SAAS,CAAC,YAAM;IACdc,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAChB,oBAAOb,KAAA,CAAAmB,aAAA,CAACnB,KAAK,CAACoB,QAAQ;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,UAAU,GAAGP,KAAK,CAACsB,QAAQ,GAAG,IAAI,CAAkB;AAC9E,CAAC;AACD,eAAevB,kBAAkB"},"metadata":{},"sourceType":"module"}